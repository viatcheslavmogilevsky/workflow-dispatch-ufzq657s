name: Fake notification

on:
  status: {}

jobs:
  debug_context:
    runs-on: ubuntu-latest
    steps:
    - name: Debug context
      id: debug
      env:
        DEBUG_EVENT_NAME: ${{ github.event_name }}
        DEBUG_CURRENT_BRANCHES: ${{ toJson(github.event.branches) }}
        DEBUG_CURRENT_CONTEXT: ${{ github.event.context }}
        DEBUG_CURRENT_STATE: ${{ github.event.state }}
        DEBUG_TARGET_URL: ${{ github.event.target_url }}
        DEBUG_TARGET_RELEASE: ${{ startsWith(github.event.target_url,'https://example.com') && 'production_release' || 'staging_release' }}
      run: |
        echo "DEBUG_EVENT_NAME: $DEBUG_EVENT_NAME"
        echo "DEBUG_CURRENT_BRANCHES: $DEBUG_CURRENT_BRANCHES"
        echo "DEBUG_CURRENT_CONTEXT: $DEBUG_CURRENT_CONTEXT"
        echo "DEBUG_TARGET_URL: $DEBUG_TARGET_URL"
        echo "DEBUG_TARGET_RELEASE: $DEBUG_TARGET_RELEASE"

  notify:
    if: ${{ startsWith(github.event.context,'continuous-delivery/') && contains(github.event.target_url,'example.com') }}
    runs-on: ubuntu-latest
    steps:
    - name: getting tag SHA related to deployed env
      uses: octokit/request-action@v2.x
      id: get_tag_sha
      with:
        route: GET /repos/${{ github.repository }}/git/ref/tags/${{ startsWith(github.event.target_url,'https://example.com') && 'production_release' || 'staging_release' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: getting commit SHA, tagger and tag annotation
      uses: octokit/request-action@v2.x
      id: get_tag_data
      with:
        route: GET /repos/${{ github.repository }}/git/tags/${{ fromJson(steps.get_tag_sha.outputs.data).object.sha }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Notify to stdout
      id: notify
      env:
        DEBUG_TAGGER_NAME: ${{ fromJson(steps.get_tag_data.outputs.data).tagger.name }}
        DEBUG_RAW_ANNOTATION:  ${{ fromJson(steps.get_tag_data.outputs.data).message }}
        DEBUG_COMMIT_SHA: ${{ fromJson(steps.get_tag_data.outputs.data).object.sha }}
        DEBUG_OVERRIDE_USER: ${{ fromJson(fromJson(steps.get_tag_data.outputs.data).message).override_user }}
        DEBUG_ENV: ${{ startsWith(github.event.target_url,'https://example.com') && 'production' || 'staging' }}
        DEBUG_STATUS: ${{ github.event.state }}
      run: |
        echo "DEBUG_TAGGER_NAME: $DEBUG_TAGGER_NAME"
        echo "DEBUG_RAW_ANNOTATION: $DEBUG_RAW_ANNOTATION"
        echo "DEBUG_COMMIT_SHA: $DEBUG_COMMIT_SHA"
        echo "DEBUG_OVERRIDE_USER: $DEBUG_OVERRIDE_USER"
        echo "DEBUG_ENV: $DEBUG_ENV"
        echo "DEBUG_STATUS: $DEBUG_STATUS"
